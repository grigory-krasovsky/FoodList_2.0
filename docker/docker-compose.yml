version: '2'

services:
  app:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: ../
      dockerfile: docker/AppDockerfile
    container_name: app
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  db:
    build:
      context: .
      dockerfile: PostgresDockerfile
    container_name: db
    ports:
      - '40703:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    build:
      context: ../
      dockerfile: docker/ESDockerfile
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.4
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

#  redis:
#    image: 'redis:alpine'
#    container_name: redis
#    ports:
#      - '6379:6379'

#  pgsync:
#    build:
#      context: .
#      dockerfile: PgsyncDockerfile
#    container_name: pgsync
#    environment:
#      - PG_USER=postgres
#      - PG_PASSWORD=postgres
#      - PG_DATABASE=postgres
#      - PG_HOST=db
#      - ELASTICSEARCH_HOST=elasticsearch
#      - REDIS_HOST=redis